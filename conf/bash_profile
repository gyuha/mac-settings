# GYUHA SETTINGS
export CLICOLOR=1
export LSCOLORS=ExFxCxDxBxegedabagacad

export SVN_EDITOR="vim --noplugin"

PATH=$PATH:~/bin:~/.bin

set -o vi

#ryan 256 color support
#if [ -e /usr/share/terminfo/x/xterm-256color ]; then
#	export TERM='xterm-256color'
#else
#	export TERM='xterm-color'
#fi

export TERM='screen-256color'
export EDITOR=vim

alias tmux="tmux -2"
alias vi='vim'
alias of='/usr/bin/nautilus .' # 우분투에서 현재 폴더 탐색기로 열기
alias devgrep="grep --exclude-dir='.svn' --exclude='*.swp'"

# A two-line colored Bash prompt (PS1) with Git branch and a line decoration
# which adjusts automatically to the width of the terminal.
# Recognizes and shows Git, SVN and Fossil branch/revision.
# Screenshot: http://img194.imageshack.us/img194/2154/twolineprompt.png
# Michal Kottman, 2012
# REF : https://gist.github.com/mkottman/1936195
# REF2 : http://eduardolezcano.com/2-line-clean-prompt/

RESET="\[\033[0m\]"
RED="\[\033[0;31m\]"
GREEN="\[\033[01;32m\]"
BLUE="\[\033[01;34m\]"
YELLOW="\[\033[0;33m\]"

function vcs_prompt {
	if [ -d .git ]; then
		ref=$(git symbolic-ref HEAD 2> /dev/null)
		PS_VCS_SERVICE="git"
		PS_VCS_BRANCH="${ref#refs/heads/}"
	elif [ -d .svn ]; then
		PS_VCS_SERVICE="svn"
		PS_VCS_BRANCH="$(svn info|awk '/Revision/{print $2}')"
	elif [ -d .hg ]; then
		PS_VCS_SERVICE="hg"
		PS_VCS_BRANCH="$(hg branch)"
	elif [ -f _FOSSIL_ -o -f .fslckout ]; then
		PS_VCS_SERVICE="fossil"
		PS_VCS_BRANCH="$(fossil status|awk '/tags/{print $2}')"
	else
		PS_VCS_SERVICE=''
		PS_VCS_BRANCH=''
	fi

	if [ -n "$PS_VCS_SERVICE" ]; then
		PS_BRANCH="$D_YELLOW\$PS_VCS_SERVICE $RED\$PS_VCS_BRANCH$YELLOW"
		PS_BRANCH_SIZE="\${#PS_VCS_SERVICE}-\${#PS_VCS_BRANCH}"
		PS_VCS="\[\033[\$((COLUMNS-3-$PS_BRANCH_SIZE))G\] $YELLOW[$PS_BRANCH]"
	else
		PS_VCS=''
	fi
}

PROMPT_COMMAND=vcs_prompt

PS_LINE=`printf -- '..%.0s' {1..200}`
PS_FILL=${PS_LINE:0:$COLUMNS}
PS_INFO="$GREEN\u@\h$RESET:$BLUE\w"

export PS1="\${PS_FILL}\[\033[0G\]${PS_INFO} ${PS_VCS}\n${RESET}\$ "


# PS_LINE=`printf -- '..%.0s' {1..200}`
# function parse_git_branch {
#   PS_BRANCH=''
#   PS_FILL=${PS_LINE:0:$COLUMNS}
#   if [ -d .svn ]; then
#     PS_BRANCH="(svn r$(svn info|awk '/Revision/{print $2}'))"
#     return
#   elif [ -f _FOSSIL_ -o -f .fslckout ]; then
#     PS_BRANCH="(fossil $(fossil status|awk '/tags/{print $2}')) "
#     return
#   fi
#   ref=$(git symbolic-ref HEAD 2> /dev/null) || return
#   PS_BRANCH="(git ${ref#refs/heads/}) "
# }
# PROMPT_COMMAND=parse_git_branch
# PS_INFO="$GREEN\u@\h$RESET:$BLUE\w"
# PS_GIT="$YELLOW\$PS_BRANCH"
# PS_TIME="\[\033[\$((COLUMNS-10))G\] $RED[\t]"
# export PS1="\${PS_FILL}\[\033[0G\]${PS_INFO} ${PS_GIT}${PS_TIME}\n${RESET}\$ "
